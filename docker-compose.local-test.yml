version: '3.8'

services:
  # Frontend Service
  frontend:
    image: vendorflow-frontend:latest
    container_name: vendorflow-frontend-local
    restart: unless-stopped
    ports:
      - "3001:3005"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3004
      - NEXT_PUBLIC_ML_URL=http://localhost:8002
    networks:
      - vendorflow-local
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3005/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API Service
  backend:
    image: vendorflow-deploy-backend:latest
    container_name: vendorflow-backend-local
    restart: unless-stopped
    ports:
      - "3004:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb+srv://fadoyintaiwo01:Pakistan123@cluster0.wkxj1sg.mongodb.net/vendor_management
      - JWT_SECRET=vendorflow-super-secret-jwt-key-change-in-production-2024
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - vendorflow-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ML Service
  ml-service:
    image: vendorflow-deploy-ml-service:latest
    container_name: vendorflow-ml-service-local
    restart: unless-stopped
    ports:
      - "8002:8000"
    environment:
      - PYTHONPATH=/app
      - MONGODB_URI=mongodb+srv://fadoyintaiwo01:Pakistan123@cluster0.wkxj1sg.mongodb.net/vendor_management
    networks:
      - vendorflow-local
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vendorflow-redis-local
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - vendorflow-local
    volumes:
      - redis-local-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  vendorflow-local:
    driver: bridge

volumes:
  redis-local-data: 